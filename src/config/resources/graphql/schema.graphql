# Copyright (C) 2021 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# siehe app.module.ts

schema {
  query: Query
  mutation: Mutation
}

"Funktionen, um Bücherdaten zu lesen"
type Query {
  buecher(suchkriterien: SuchkriterienInput): [Flugzeug!]

  flugzeug(id: ID!): Flugzeug
}

"Funktionen, um Bücher neu anzulegen, zu aktualisieren oder zu löschen"
type Mutation {
  create(input: FlugzeugInput!): CreatePayload

  update(input: FlugzeugUpdateInput!): UpdatePayload

  delete(id: ID!): Boolean

  # Mutation, wenn z.B. der Login-Zeitpunkt im IDM-System gespeichert wird
  login(username: String!, password: String!): LoginResult
  refresh(refresh_token: String!): LoginResult
}

"Daten zum Titel eines Flugzeuges"
type Modell {
  modell: String!
}

"Daten zum Titel eines Flugzeuges"
type Sitzplatz {
  sitzplatzklasse: String!
}

"Datenschema zu einem Flugzeug, das gelesen wird"
type Flugzeug {
  # ID ist bei Apollo ein String
  id: Int!
  version: Int!
  preis: Float!
  einsatzbereit: Boolean
  baujahr: String
  # 1:1-Beziehung
  modell: Modell!
}

"Suchkriterien für Bücher"
input SuchkriterienInput {
  modell: String
  einsatzbereit: Boolean
}

"Daten zum Titel eines neuen Flugzeuges"
input ModellInput {
  modell: String!
}

"Daten zu den Abbildungen eines Flugzeuges"
input SitzplatzInput {
  sitzplatzklasse: String!
}

"Daten für ein neues Flugzeug"
input FlugzeugInput {
  preis: Float
  einsatzbereit: Boolean
  baujahr: String
  modell: ModellInput!
  sitzplaetze: [SitzplatzInput!]
}

type CreatePayload {
  id: Int
}

"Daten für ein zu änderndes Flugzeug"
input FlugzeugUpdateInput {
  id: ID
  version: Int
  preis: Float
  einsatzbereit: Boolean
  baujahr: String
}

type UpdatePayload {
  version: Int
}

type LoginResult {
  access_token: String!
  expires_in: Int!
  refresh_token: String!
  refresh_expires_in: Int!
  roles: [String!]
}
